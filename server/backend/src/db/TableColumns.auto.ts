/**
 * This file was auto-generated using specs and scripts in the db-schema
 * repository. DO NOT EDIT DIRECTLY.
 */

import { DbTableName } from './TableInterfaces.auto';

export const tableColumns: { [key in DbTableName]: string[] } = {
  language: [
    'id',
    'name',
    'primary_language_name',
    'locale',
    'iso_639_3_code',
    'script',
    'string_support',
    'file_support',
    'list_support',
    'update_lrv_file',
    'lrv_file_id',
    'params',
    'created_at',
    'last_updated_at',
  ],
  scenario: [
    'id',
    'name',
    'full_name',
    'description',
    'task_params',
    'assignment_granularity',
    'group_assignment_order',
    'microtask_assignment_order',
    'synchronous_validation',
    'enabled',
    'skills',
    'params',
    'created_at',
    'last_updated_at',
  ],
  language_resource: [
    'id',
    'core',
    'scenario_id',
    'string_resource_id',
    'type',
    'list_resource',
    'name',
    'description',
    'required',
    'update_lrv_file',
    'lrv_file_id',
    'params',
    'created_at',
    'last_updated_at',
  ],
  language_resource_value: [
    'id',
    'language_id',
    'language_resource_id',
    'value',
    'valid',
    'need_update',
    'params',
    'created_at',
    'last_updated_at',
  ],
  work_provider: [
    'id',
    'admin',
    'creation_code',
    'full_name',
    'auth_provider',
    'username',
    'salt',
    'passwd_hash',
    'phone_number',
    'email',
    'oauth_id',
    'id_token',
    'params',
    'created_at',
    'last_updated_at',
  ],
  box: [
    'id',
    'creation_code',
    'physical',
    'name',
    'location_name',
    'gps_location',
    'hw_address',
    'url',
    'salt',
    'key',
    'last_sent_to_server_at',
    'last_received_from_server_at',
    'params',
    'created_at',
    'last_updated_at',
  ],
  worker: [
    'id',
    'local_id',
    'box_id',
    'creation_code',
    'auth_provider',
    'username',
    'salt',
    'passwd_hash',
    'phone_number',
    'email',
    'oauth_id',
    'id_token',
    'full_name',
    'profile_picture',
    'age',
    'gender',
    'app_language',
    'last_sent_to_box_at',
    'last_received_from_box_at',
    'last_sent_to_server_at',
    'last_received_from_server_at',
    'params',
    'created_at',
    'last_updated_at',
  ],
  karya_file: [
    'id',
    'local_id',
    'box_id',
    'container_name',
    'name',
    'url',
    'creator',
    'worker_id',
    'algorithm',
    'checksum',
    'in_box',
    'in_server',
    'params',
    'created_at',
    'last_updated_at',
  ],
  task: [
    'id',
    'work_provider_id',
    'language_id',
    'scenario_id',
    'name',
    'description',
    'primary_language_name',
    'primary_language_description',
    'params',
    'errors',
    'actions',
    'input_file_id',
    'output_file_id',
    'budget',
    'deadline',
    'assignment_granularity',
    'group_assignment_order',
    'microtask_assignment_order',
    'status',
    'created_at',
    'last_updated_at',
  ],
  microtask_group: [
    'id',
    'task_id',
    'microtask_assignment_order',
    'status',
    'params',
    'created_at',
    'last_updated_at',
  ],
  microtask: [
    'id',
    'task_id',
    'group_id',
    'input',
    'input_file_id',
    'deadline',
    'credits',
    'status',
    'output',
    'params',
    'created_at',
    'last_updated_at',
  ],
  policy: [
    'id',
    'scenario_id',
    'name',
    'description',
    'params',
    'created_at',
    'last_updated_at',
  ],
  task_assignment: [
    'id',
    'task_id',
    'box_id',
    'policy_id',
    'deadline',
    'status',
    'params',
    'created_at',
    'last_updated_at',
  ],
  worker_language_skill: [
    'id',
    'local_id',
    'box_id',
    'worker_id',
    'language_id',
    'can_speak',
    'can_type',
    'can_read',
    'can_listen',
    'speak_score',
    'type_score',
    'read_score',
    'listen_score',
    'params',
    'created_at',
    'last_updated_at',
  ],
  microtask_group_assignment: [
    'id',
    'local_id',
    'box_id',
    'microtask_group_id',
    'worker_id',
    'status',
    'params',
    'created_at',
    'last_updated_at',
  ],
  microtask_assignment: [
    'id',
    'local_id',
    'box_id',
    'microtask_id',
    'worker_id',
    'deadline',
    'status',
    'completed_at',
    'output',
    'output_file_id',
    'credits',
    'params',
    'created_at',
    'last_updated_at',
  ],
  payout_method: [
    'id',
    'name',
    'description',
    'required_info',
    'enabled',
    'created_at',
    'last_updated_at',
  ],
  payout_info: [
    'id',
    'local_id',
    'box_id',
    'worker_id',
    'method_id',
    'info',
    'status',
    'enabled',
    'params',
    'created_at',
    'last_updated_at',
  ],
  payment_request: [
    'id',
    'local_id',
    'box_id',
    'payout_info_id',
    'amount',
    'status',
    'reference',
    'params',
    'created_at',
    'last_updated_at',
  ],
};
