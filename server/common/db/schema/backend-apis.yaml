language:
  auto:
    CREATE: admin
    UPDATE_BY_ID: admin
    GET_BY_ID: wp
    GET_ALL: wp

scenario:
  auto:
    GET_BY_ID: wp
    GET_ALL: wp

work_provider:
  auto:
    GET_ALL: admin
  extra:
    - method: GET_BY_ID
      actor: wp
    - method: UPDATE_BY_ID
      actor: wp
    - method: POST
      label: GENERATE_CC
      actor: admin
      endpoint: /work_provider/generate/cc
      controller: generateCreationCode

auth:
  extra:
    - method: PUT
      actor: wp
      label: SIGN_UP
      request: DBT.WorkProvider
      endpoint: /work_provider/update/cc
      controller: updateWithCreationCode
      response: DBT.WorkProviderRecord
    - method: POST
      actor: wp
      label: SIGN_IN
      endpoint: /work_provider/sign/in
      auth_header: true
      request: '{}'
      controller: signIn
      response: DBT.WorkProviderRecord
    - method: POST
      actor: wp
      label: AUTO_SIGN_IN
      endpoint: /work_provider/sign/in
      request: '{}'
      controller: signIn
      response: DBT.WorkProviderRecord
    - method: PUT
      actor: wp
      label: SIGN_OUT
      endpoint: /work_provider/sign/out
      request: '{}'
      controller: signOut
      response: '{}'

box:
  auto:
    UPDATE_BY_ID: admin
    GET_BY_ID: admin
    GET_ALL: admin
  extra:
    - method: POST
      actor: admin
      label: GENERATE_CC
      endpoint: /box/generate/cc
      controller: generateCreationCode

worker:
  auto:
    UPDATE_BY_ID: admin
    GET_BY_ID: admin
    GET_ALL: admin

karya_file:
  auto:
    CREATE: admin
    UPDATE_BY_ID: admin
    GET_BY_ID: admin
    GET_ALL: admin

task:
  extra:
    - method: CREATE
      actor: wp
      file: true
    - method: GET_BY_ID
      actor: wp
    - method: UPDATE_BY_ID
      actor: wp
      file: true
    - method: GET_ALL
      actor: wp
    - method: PUT
      actor: wp
      label: VALIDATE
      endpoint: /task/:id/validate
      request: '{}'
      controller: validateTask
    - method: PUT
      actor: admin
      label: APPROVE
      endpoint: /task/:id/approve
      request: '{}'
      controller: approveTask

microtask_group:
  extra:
    - method: GET_BY_ID
      actor: wp
    - method: GET_ALL
      actor: wp

microtask:
  extra:
    - method: GET_BY_ID
      actor: wp
    - method: GET_ALL
      actor: wp
    - method: GET
      actor: admin
      label: GET_ALL_WITH_COMPLETED
      endpoint: /microtasks_with_completed_assignments/
      controller: getMicrotasksWithCompletedAssignments
      params: DBT.Microtask

policy:
  auto:
    GET_BY_ID: admin
    GET_ALL: admin

task_assignment:
  auto:
    CREATE: admin
    UPDATE_BY_ID: admin
    GET_BY_ID: admin
    GET_ALL: admin

worker_language_skill:
  auto:
    UPDATE_BY_ID: admin
    GET_BY_ID: admin
    GET_ALL: admin

microtask_group_assignment:
  auto:
    UPDATE_BY_ID: admin
    GET_BY_ID: admin
    GET_ALL: admin

microtask_assignment:
  auto:
    UPDATE_BY_ID: admin
    GET_BY_ID: admin
  extra:
    - method: GET_ALL
      actor: admin
      params: 'DBT.MicrotaskAssignment & { limit?: number; }'
      response: '{ assignments: DBT.MicrotaskAssignmentRecord[]; files: DBT.KaryaFileRecord[] }'

payout_info:
  auto:
    UPDATE_BY_ID: admin
    GET_BY_ID: admin
    GET_ALL: admin

payment_request:
  auto:
    UPDATE_BY_ID: admin
    GET_BY_ID: admin
  extra:
    - method: GET_ALL
      actor: admin
      params: DBT.PayoutInfo & DBT.PaymentRequest
